#if !defined(AFX_GTCHART_H__7295A6C3_7C47_48BC_A318_10862BB68750__INCLUDED_)
#define AFX_GTCHART_H__7295A6C3_7C47_48BC_A318_10862BB68750__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CGTChart wrapper class

class CGTChart : public CWnd
{
protected:
	DECLARE_DYNCREATE(CGTChart)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x229ab93b, 0x612c, 0x401f, { 0x82, 0x54, 0x3d, 0x38, 0xa1, 0x47, 0x69, 0xd8 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetLineHeight();
	void SetLineHeight(long);
	unsigned long GetOddLineColor();
	void SetOddLineColor(unsigned long);
	unsigned long GetEvenLineColor();
	void SetEvenLineColor(unsigned long);
	unsigned long GetItemColor();
	void SetItemColor(unsigned long);
	CString GetResourceBarCaption();
	void SetResourceBarCaption(LPCTSTR);
	BOOL GetEnableOverlap();
	void SetEnableOverlap(BOOL);
	BOOL GetNumber();
	void SetNumber(BOOL);
	BOOL GetMoveItemSnapLineable();
	void SetMoveItemSnapLineable(BOOL);
	BOOL GetItemColorGradual();
	void SetItemColorGradual(BOOL);
	short GetRulerMin();
	void SetRulerMin(short);
	short GetRulerMax();
	void SetRulerMax(short);
	long GetJumpTime();
	void SetJumpTime(long);
	unsigned long GetItemColor2();
	void SetItemColor2(unsigned long);
// Operations
public:
	BOOL InitControl(long pMainThread);
	long GetItemNumOfLine(long nIndexLineItem);
	long GetLineNum();
	BOOL DoDropOver(long* nLineIndex);
	BOOL SetLineData(long nIndexLine, long nLineData);
	BOOL GetLineData(long nLineIndex, long* pnLineData);
	BOOL GetItemInfo(long nItemIndex, BSTR* strCaption, BSTR* strAddition, long* timeBegin, long* timeDuration);
	long GetItemNum();
	BOOL SetItemData(long nItemIndex, long nItemData);
	BOOL GetItemData(long nItemIndex, long* pnItemData);
	long GetCurSeledItem(long* pnItemIndexSeled);
	long GetCurSeledLine();
	void Clear(BOOL bRefresh);
	long ClearAllItemOfLine(long nLineIndex);
	long AddItem(long* pnItemIndex, long nLineIndex, LPCTSTR strCaption, LPCTSTR strAddition, long timeBegin, long timeDuration, BOOL bRePosition,COLORREF colorBegin=RGB(255,0,0),COLORREF colorEnd=RGB(255,255,255));
	long AddLine(LPCTSTR strCaption, LPCTSTR strAddition);
	void EnableBtn(long nBtnIndex, BOOL bEnable);
	void ShowBtn(long nBtnIndex, BOOL bShow);
	long ResetItemDataOfLine(long nLineIndex);
	long GetItemSeledNum();
	long ClearItemSeled(BOOL bRefresh);
	BOOL SetLineModifyable(long nLineIndex, BOOL bModifyable);
	BOOL SetItemAdditonInfo(long nItemIndex, LPCTSTR strAddition);
	BOOL SetLineSeled(long nLineIndex, BOOL bSeled, BOOL bRefresh);
	void SetAllLineModifyable(BOOL bModifyable);
	void GetScrollPos(long* xPos, long* yPos);
	void SetScrollPos(long xPos, long yPos);
	BOOL IsUnderCursor();
	BOOL DelLine(long nLineIndex, BOOL bRefresh);
	void GetScrollRange(long* nXRange, long* nYRange);
	BOOL GetLineIndexOfItem(long nItemIndex, long* pnLineIndex);
	BOOL DelItem(long nLineIndex, long nItemIndex);
	void EnableLinkLine();
	void DisableLinkLine();
	void SetItemLink(long nLineIndex, long nItemIndex,BOOL bEnableLinkLine);
	void SetPreItem(long nLineIndex, long nItemIndex,long nPreLineIndex,long nPreItemIndex);
	void SetNextItem(long nLineIndex, long nItemIndex,long nNextLineIndex,long nNextItemIndex);
	void SetLinkLineItem(long nLineIndex, long nItemIndex,long nLinkLineIndex,long nLinkItemIndex);
	void UpdateViews(BOOL bRefreshResourceView=TRUE);
	void SetPrintReportTitle(LPSTR  strCaption);
	void SetReportPath(LPSTR strReportPath);
	void AboutBox();
	void ShowCaptionInItemTooltip(BOOL bShow);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_GTCHART_H__7295A6C3_7C47_48BC_A318_10862BB68750__INCLUDED_)
