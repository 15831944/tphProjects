#if !defined(AFX_FLPGRF_H__11DFFB52_3174_4370_BBC9_BE21406BFA09__INCLUDED_)
#define AFX_FLPGRF_H__11DFFB52_3174_4370_BBC9_BE21406BFA09__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CFlpGrf wrapper class

class CFlpGrf : public CWnd
{
protected:
	DECLARE_DYNCREATE(CFlpGrf)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0xa167e4, 0x27dc, 0x11cf, { 0x86, 0x7b, 0x0, 0x40, 0x95, 0x22, 0x2f, 0x78 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	long GetAxis();
	void SetAxis(long);
	short GetAxisAdjust();
	void SetAxisAdjust(short);
	long GetAxisAdjustEvenSpace();
	void SetAxisAdjustEvenSpace(long);
	BOOL GetAxisAsPercent();
	void SetAxisAsPercent(BOOL);
	double GetAxisBarBaseValue();
	void SetAxisBarBaseValue(double);
	BOOL GetAxisBarBase();
	void SetAxisBarBase(BOOL);
	CString GetAxisDecimalSeparator();
	void SetAxisDecimalSeparator(LPCTSTR);
	BOOL GetAxisGrid();
	void SetAxisGrid(BOOL);
	unsigned long GetAxisGridColor();
	void SetAxisGridColor(unsigned long);
	BOOL GetAxisGone();
	void SetAxisGone(BOOL);
	long GetAxisGridPattern();
	void SetAxisGridPattern(long);
	short GetAxisTitleDistance();
	void SetAxisTitleDistance(short);
	BOOL GetAxisLog();
	void SetAxisLog(BOOL);
	BOOL GetAxisReverse();
	void SetAxisReverse(BOOL);
	unsigned long GetAxisScaleBackColor();
	void SetAxisScaleBackColor(unsigned long);
	unsigned long GetAxisScaleColor();
	void SetAxisScaleColor(unsigned long);
	short GetAxisScaleDec();
	void SetAxisScaleDec(short);
	short GetAxisScaleFont();
	void SetAxisScaleFont(short);
	double GetAxisScaleInc();
	void SetAxisScaleInc(double);
	BOOL GetAxisScaleManual();
	void SetAxisScaleManual(BOOL);
	double GetAxisScaleMax();
	void SetAxisScaleMax(double);
	double GetAxisScaleMin();
	void SetAxisScaleMin(double);
	CString GetAxisScalePostChar();
	void SetAxisScalePostChar(LPCTSTR);
	CString GetAxisScalePreChar();
	void SetAxisScalePreChar(LPCTSTR);
	short GetAxisScaleSize();
	void SetAxisScaleSize(short);
	short GetAxisScaleSkip();
	void SetAxisScaleSkip(short);
	CString GetAxisThousandsSeparator();
	void SetAxisThousandsSeparator(LPCTSTR);
	BOOL GetAxisTickLine();
	void SetAxisTickLine(BOOL);
	BOOL GetAxisTicks();
	void SetAxisTicks(BOOL);
	CString GetAxisTitle();
	void SetAxisTitle(LPCTSTR);
	unsigned long GetAxisTitleBackColor();
	void SetAxisTitleBackColor(unsigned long);
	unsigned long GetAxisTitleColor();
	void SetAxisTitleColor(unsigned long);
	short GetAxisTitleFont();
	void SetAxisTitleFont(short);
	OLE_COLOR GetBackColor();
	void SetBackColor(OLE_COLOR);
	short GetColumn();
	void SetColumn(short);
	long GetColumnAxis();
	void SetColumnAxis(long);
	unsigned long GetColumnColor();
	void SetColumnColor(unsigned long);
	long GetColumnLabels();
	void SetColumnLabels(long);
	CString GetColumnLegend();
	void SetColumnLegend(LPCTSTR);
	short GetColumnLineWidth();
	void SetColumnLineWidth(short);
	short GetColumnMarkSize();
	void SetColumnMarkSize(short);
	long GetColumnMiss();
	void SetColumnMiss(long);
	long GetColumnMissStyle();
	void SetColumnMissStyle(long);
	double GetColumnMissValue();
	void SetColumnMissValue(double);
	long GetColumnPattern();
	void SetColumnPattern(long);
	double GetColumnRegressR();
	void SetColumnRegressR(double);
	double GetColumnRegressR2();
	void SetColumnRegressR2(double);
	double GetColumnRegressSlope();
	void SetColumnRegressSlope(double);
	double GetColumnRegressYInter();
	void SetColumnRegressYInter(double);
	short GetColumnStyle();
	void SetColumnStyle(short);
	long GetColumnType();
	void SetColumnType(long);
	long GetDataBeginRow();
	void SetDataBeginRow(long);
	long GetDataEndRow();
	void SetDataEndRow(long);
	short GetDataInit();
	void SetDataInit(short);
	long GetDataRows();
	void SetDataRows(long);
	VARIANT GetDataStore();
	void SetDataStore(const VARIANT&);
	BOOL GetFontBold();
	void SetFontBold(BOOL);
	short GetFontCurrent();
	void SetFontCurrent(short);
	BOOL GetFontItalic();
	void SetFontItalic(BOOL);
	CString GetFontOpen();
	void SetFontOpen(LPCTSTR);
	long GetFontSize();
	void SetFontSize(long);
	BOOL GetFontUnderline();
	void SetFontUnderline(BOOL);
	short GetGraph();
	void SetGraph(short);
	long GetGraph3DBarType();
	void SetGraph3DBarType(long);
	long GetGraph3DDistance();
	void SetGraph3DDistance(long);
	short GetGraph3DElevation();
	void SetGraph3DElevation(short);
	short GetGraph3DLayerDepth();
	void SetGraph3DLayerDepth(short);
	short GetGraph3DRotation();
	void SetGraph3DRotation(short);
	short GetGraphBarWidth();
	void SetGraphBarWidth(short);
	double GetGraphAreaLeft();
	void SetGraphAreaLeft(double);
	double GetGraphAreaTop();
	void SetGraphAreaTop(double);
	double GetGraphAreaRight();
	void SetGraphAreaRight(double);
	double GetGraphAreaBottom();
	void SetGraphAreaBottom(double);
	unsigned long GetGraphBackColor();
	void SetGraphBackColor(unsigned long);
	unsigned long GetGraphBorderColor();
	void SetGraphBorderColor(unsigned long);
	long GetGraphEdit();
	void SetGraphEdit(long);
	BOOL GetGraphEnabled();
	void SetGraphEnabled(BOOL);
	BOOL GetGraphFrame();
	void SetGraphFrame(BOOL);
	unsigned long GetGraphFrameColor();
	void SetGraphFrameColor(unsigned long);
	BOOL GetGraphHistogram();
	void SetGraphHistogram(BOOL);
	long GetGraphOverlap();
	void SetGraphOverlap(long);
	BOOL GetGraphRecord();
	void SetGraphRecord(BOOL);
	BOOL GetGraphReset();
	void SetGraphReset(BOOL);
	BOOL GetGraphSwapScale();
	void SetGraphSwapScale(BOOL);
	CString GetGraphTitle();
	void SetGraphTitle(LPCTSTR);
	unsigned long GetGraphTitleBackColor();
	void SetGraphTitleBackColor(unsigned long);
	unsigned long GetGraphTitleColor();
	void SetGraphTitleColor(unsigned long);
	short GetGraphTitleFont();
	void SetGraphTitleFont(short);
	short GetGraphTitleFont2();
	void SetGraphTitleFont2(short);
	long GetGraphType();
	void SetGraphType(long);
	long GetLegendAlign();
	void SetLegendAlign(long);
	unsigned long GetLegendBackColor();
	void SetLegendBackColor(unsigned long);
	short GetLegendColumns();
	void SetLegendColumns(short);
	short GetLegendFrameDist();
	void SetLegendFrameDist(short);
	short GetLegendFrameStyle();
	void SetLegendFrameStyle(short);
	long GetLegendJust();
	void SetLegendJust(long);
	short GetLegendLabelStyle();
	void SetLegendLabelStyle(short);
	short GetLegendPosHorz();
	void SetLegendPosHorz(short);
	long GetLegendPosHorzRef();
	void SetLegendPosHorzRef(long);
	short GetLegendPosVert();
	void SetLegendPosVert(short);
	long GetLegendPosVertRef();
	void SetLegendPosVertRef(long);
	short GetLegendTextDist();
	void SetLegendTextDist(short);
	CString GetPersistFile();
	void SetPersistFile(LPCTSTR);
	short GetPieLabelDec();
	void SetPieLabelDec(short);
	short GetPieLabelDist();
	void SetPieLabelDist(short);
	short GetPieLabelFractOut();
	void SetPieLabelFractOut(short);
	long GetPieLabelStyle();
	void SetPieLabelStyle(long);
	short GetPieSetRadius();
	void SetPieSetRadius(short);
	double GetPieRotation();
	void SetPieRotation(double);
	short GetPieShoving();
	void SetPieShoving(short);
	BOOL GetPieTether();
	void SetPieTether(BOOL);
	short GetPrintBottom();
	void SetPrintBottom(short);
	long GetPrintDpiWidth();
	void SetPrintDpiWidth(long);
	long GetPrintDpiHeight();
	void SetPrintDpiHeight(long);
	short GetPrintLeft();
	void SetPrintLeft(short);
	short GetPrintLineWidth();
	void SetPrintLineWidth(short);
	long GetPrintNow();
	void SetPrintNow(long);
	long GetPrintOrientation();
	void SetPrintOrientation(long);
	short GetPrintRight();
	void SetPrintRight(short);
	short GetPrintTop();
	void SetPrintTop(short);
	BOOL GetResetControl();
	void SetResetControl(BOOL);
	short GetSpiderRotate();
	void SetSpiderRotate(short);
	short GetXYZGridSize();
	void SetXYZGridSize(short);
	long GetXYZType();
	void SetXYZType(long);
	short GetBorderStyle();
	void SetBorderStyle(short);
	long GetColumnRowStart();
	void SetColumnRowStart(long);
	long GetColumnRowEnd();
	void SetColumnRowEnd(long);
	CString GetPrintPath();
	void SetPrintPath(LPCTSTR);
	BOOL GetObjectFindAutoZoom();
	void SetObjectFindAutoZoom(BOOL);
	BOOL GetPrintAbortDialog();
	void SetPrintAbortDialog(BOOL);
	short GetGraphDataAspectRatioX();
	void SetGraphDataAspectRatioX(short);
	short GetGraphDataAspectRatioY();
	void SetGraphDataAspectRatioY(short);
	BOOL GetObjectClipToFrame();
	void SetObjectClipToFrame(BOOL);
	long GetAxisDateIncType();
	void SetAxisDateIncType(long);
	BOOL GetAxisTypeChar();
	void SetAxisTypeChar(BOOL);
	short GetLegendFont();
	void SetLegendFont(short);
	CString GetGraphNote();
	void SetGraphNote(LPCTSTR);
	long GetAxisTimeIncType();
	void SetAxisTimeIncType(long);
	long GetColumnBarGradient();
	void SetColumnBarGradient(long);
	long GetColumnBarGradientPercent();
	void SetColumnBarGradientPercent(long);
	long GetToolTips();
	void SetToolTips(long);
	short GetColumnRegress();
	void SetColumnRegress(short);
	short GetColumnRegressDegreesOfFreedom();
	void SetColumnRegressDegreesOfFreedom(short);
	double GetColumnRegressCurveSegmentSize();
	void SetColumnRegressCurveSegmentSize(double);
	long GetColumnMovingAve();
	void SetColumnMovingAve(long);
	short GetColumnMovingAveNumberOfPoints();
	void SetColumnMovingAveNumberOfPoints(short);
	short GetColumnMarkFont();
	void SetColumnMarkFont(short);
	short GetColumnLabelsFont();
	void SetColumnLabelsFont(short);
	long GetColumnMovingAveStyle();
	void SetColumnMovingAveStyle(long);
	long GetAxisScaleLabelStyle();
	void SetAxisScaleLabelStyle(long);
	long GetGraphBorderColorStyle();
	void SetGraphBorderColorStyle(long);
	long GetAxisScaleExponentStyle();
	void SetAxisScaleExponentStyle(long);
	long GetPrintQuality();
	void SetPrintQuality(long);
	short GetPrintExactSizeWidth();
	void SetPrintExactSizeWidth(short);
	short GetPrintExactSizeHeight();
	void SetPrintExactSizeHeight(short);
	short GetPrintExactSize();
	void SetPrintExactSize(short);
	double GetPrintExactInchWidth();
	void SetPrintExactInchWidth(double);
	double GetPrintExactInchHeight();
	void SetPrintExactInchHeight(double);
	short GetPrintYResolution();
	void SetPrintYResolution(short);
	long GetAxisFunction();
	void SetAxisFunction(long);
	double GetAxisFunctionVar();
	void SetAxisFunctionVar(double);

// Operations
public:
	void AxisLengthToExp(short Length);
	void AxisShadeRange(unsigned long ShadeColor, double ShadeLower, double ShadeUpper);
	void BackPicture(LPCTSTR FileName, long Style, short XOffset, short YOffset);
	void BackPictureOffset(short XOffset, short YOffset);
	unsigned long GetDataColor(long row, long Column);
	void SetDataColor(long row, long Column, unsigned long newValue);
	short GetDataStyle(long row, long Column);
	void SetDataStyle(long row, long Column, short nNewValue);
	VARIANT GetDataValueAsStr(long row, long Column);
	VARIANT GetDataValue(long row, long Column);
	void SetDataValue(long row, long Column, const VARIANT& newValue);
	CString GetDataValueLabel(long row, long Column);
	void SetDataValueLabel(long row, long Column, LPCTSTR lpszNewValue);
	long GetDataPattern(long row, long Column);
	void SetDataPattern(long row, long Column, long nNewValue);
	short GetDataLegend(long row, long Column);
	void SetDataLegend(long row, long Column, short nNewValue);
	short GetDataSize(long row, long Column);
	void SetDataSize(long row, long Column, short nNewValue);
	short GetDataExplode(long row, long Column);
	void SetDataExplode(long row, long Column, short nNewValue);
	BOOL GetGraphVisible(short GraphNumber);
	void SetGraphVisible(short GraphNumber, BOOL bNewValue);
	void GraphAreaFrame(BOOL IsFrame, short BackColor, long FrameStyle);
	short ImageToClipboard();
	BOOL ImageToFile(LPCTSTR FileName, short Width, short Height, const VARIANT& Bits, const VARIANT& DPI);
	BOOL ImageToGif(LPCTSTR FileName, short Width, short Height, const VARIANT& DPI, const VARIANT& CreatePalette);
	BOOL LoadGraph(LPCTSTR FileName);
	void LoadGraphDialog(LPCTSTR FileExt);
	void ObjectPen(short PenFg, short PenBg, long PenStyle, short PenWidth, long PenMode);
	void ObjectBrush(short BrushFg, short BrushBg, long BrushStyle, long BrushMode);
	void ObjectFont(short FontHandle, long FontAlign, long FontJustify, short FontOrient);
	void ObjectHotBrush(short BrushFg, short BrushBg, long BrushStyle, long BrushMode);
	void ObjectHotFont(short FontHandle, long FontAlign, long FontJustify, short FontOrient);
	void ObjectHotPen(short PenFg, short PenBg, long PenStyle, short PenWidth, long PenMode);
	void ObjectFindButton(short button);
	long ObjectTextAdd(float x, float y, LPCTSTR text);
	long ObjectRectAdd(long type, float x1, float y1, float x2, float y2);
	long ObjectPictAdd(LPCTSTR FileName, float x1, float y1, float x2, float y2, short offsetX, short offsetY, long Style, long border);
	void ObjectHotMove(float x1, float y1);
	long ObjectHotDelete();
	BOOL ObjectHotTextMod(LPCTSTR text);
	void ObjectScaleType(long xScale, long yScale);
	long ObjectHotSelect(long ObjectNumber);
	void ObjectHotSize(short iHandle, double x, double y);
	long ObjectTextAddRect(float left, float top, float right, float bottom, LPCTSTR text, short format);
	void PassLabelBack(LPCTSTR Label);
	BOOL SaveGraph(LPCTSTR FileName);
	void SaveGraphDialog(LPCTSTR FileExt);
	double ScaleFromAbs(long Abs, long Axis);
	double ScaleFromTwips(long Twips, long Axis);
	void SetLinePattern(short PatternNum, short Pattern, short InkLength, short SpaceLength);
	short FontNumber();
	BOOL FontClose(short nFont);
	void FontFace(short nFont, LPCTSTR Face);
	void SavePersistData();
	void AxisDateFormat(LPCTSTR FormatString);
	void GraphFrameAlign(short AlignmentBits);
	BOOL ImageToTransGif(LPCTSTR FileName, short Width, short Height, short TransparentIndex, const VARIANT& DPI, const VARIANT& CreatePalette);
	unsigned long GetColorTable(short index);
	void SetColorTable(short index, unsigned long newValue);
	short ColorTableIndexFromRGB(unsigned long RGBColor);
	short GraphData(short GraphNumber);
	short GraphCount();
	long ScaleToAbs(double Value, long Axis);
	long ScaleToTwips(double Value, long Axis);
	short PrintMultiInit(short type);
	short PrintMultiPage();
	short PrintMultiEnd();
	void DataValueMethod(long row, long Column, const VARIANT& newValue);
	short MetafileToClipboard();
	void GraphPreCalc();
	long StoreDataObject(LPDISPATCH pdispData);
	void ObjectHotSendToBack();
	void ObjectHotSendToFront();
	void ObjectHotArrowhead(long type, short Size);
	double ColumnRegressCoeff(short Degree);
	void AxisShadeRangeRemove();
	void BackPictureClear();
	void ObjectHotPictureOffset(short OffsetHorz, short OffsetVert);
	void SetBrushPattern(short nBrushNum, const VARIANT& aByteArray);
	double ColumnMax();
	double ColumnMin();
	long ColumnCount();
	short GraphFrameTop();
	short GraphFrameRight();
	short GraphFrameLeft();
	short GraphFrameBottom();
	BOOL ImageToPNG(LPCTSTR FileName, short Width, short Height, BOOL Interlaced, const VARIANT& DPI);
	VARIANT PrintGetValidDPIArray();
	short MetafileToDisk(LPCTSTR FileName);
	VARIANT PrintGetValidPrinters();
	VARIANT ObjectHotInfo();
	VARIANT ObjectInfo(short ObjectNumber);
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_FLPGRF_H__11DFFB52_3174_4370_BBC9_BE21406BFA09__INCLUDED_)
