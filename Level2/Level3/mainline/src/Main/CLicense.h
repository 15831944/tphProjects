/*
  Name:         CLicense.h (definition)
  Copyright:    Aviation Research Corporation
  Description:  CLicense class definition...
  Change-Log:   - 29/01/05 20:10 Kip
                  - Added support to automatically upgrade legacy ARCTerm
                    lock license to newer format... (see constructor)
                - 08/02/05 20:19 Kip
                  - Changed entire design. All license I/O stuff here now. 
                - 15/02/05 11:32
                  - Change: I don't think IsProductInstalled() is really
                            necessary. Temporarily stubbed out...
*/

/* License structure format...

    // ARC license identifier...
    char szMagic[2] = "AL"
    
    // Product code... (ARCTerm or ARCCapture)
    char szProductCode[2] = "AT" || "AC"
    
    // Time product was installed... (seconds since 1970)
    time_t TimeInstalled
    
    // Time product expires... (seconds since 1970)
    time_t TimeExpire = Time product expires (seconds since 1970)
    
      / // Token structure...
N ___|  unsigned char Type = Token type. 'N' Network MAC address. 'H' hard drive serial
     |  unsigned char Size = Size, in bytes, of token data
     \  unsigned char Token[Size] = Token data, depends on Type
*/

// Product registry installation locations...

    // ARCTerm...
    #define CLICENSE_REGISTRY_PATH_ARCTERM_KEY          "SOFTWARE\\Aviation Research Corporation\\ARCTerm\\Paths"
    #define CLICENSE_REGISTRY_PATH_ARCTERM_VALUE        "AppPath"
    
    // ARCCapture...
    #define CLICENSE_REGISTRY_PATH_ARCCAPTURE_KEY       "SOFTWARE\\Aviation Research Corporation\\ARCCapture\\Paths"
    #define CLICENSE_REGISTRY_PATH_ARCCAPTURE_VALUE     "AppPath"

// License registry locations...

    // ARCTerm...
    #define CLICENSE_REGISTRY_LICENSE_ARCTERM_KEY       "SOFTWARE\\Aviation Research Corporation\\ARCTerm\\WindowPos"
    #define CLICENSE_REGISTRY_LICENSE_ARCTERM_VALUE     "fonts"
    
    // ARCCapture...
    #define CLICENSE_REGISTRY_LICENSE_ARCCAPTURE_KEY    "SOFTWARE\\Aviation Research Corporation\\ARCCapture\\WindowPos"
    #define CLICENSE_REGISTRY_LICENSE_ARCCAPTURE_VALUE  "fonts"

// Pre-procs...
#define _CLICENSE_H_

// Resource compiler does not need anything else...
#ifndef RC_INVOKED

    // C headers...

        // Standard I/O...
        #include <stdio.h>

        // String library...
        #include <string.h>
        
        // Windows API...
        #include <windows.h>
        
        // IP helper API...
        #include <iphlpapi.h>
        
        // Time stuff...
        #include <time.h>

// CLicense class definition...
class CLicense
{
    // Public stuff...
    public:

        // Constructor...
        CLicense();

        // Get product license time remaining in seconds. -1 unlimited...
        // "AT" -> ARCTerm...
        // "AC" -> ARCCapture...
        int             GetProductLicenseSecondsRemaining(char *pszProductCode);

		// Get product license simulation control...
		// "AT" -> ARCTerm...
		// "AC" -> ARCCapture...
		unsigned char   GetProductLicenseSimulationControl(char *pszProductCode);

        // Install a license...
        // "AT" -> ARCTerm...
        // "AC" -> ARCCapture...
        bool            InstallProductLicense(char *pszProductCode,
                                              int nSeconds);

        // Is product installed?...
        // "AT" -> ARCTerm...
        /* "AC" -> ARCCapture...
        bool            IsProductInstalled(char *pszProductCode);*/

        // Is product license detected?...
        // "AT" -> ARCTerm...
        // "AC" -> ARCCapture...
        bool            IsProductLicenseDetected(char *pszProductCode);

        // Remove product license...
        // "AT" -> ARCTerm...
        // "AC" -> ARCCapture...
        bool            RemoveLicense(char *pszProductCode);

        // Deconstructor...
       ~CLicense();
        

	   //get application install path 
	   CString  GetPath() ;
    // Protected stuff...
    protected:

        // Get license buffer size...
        unsigned int    GetLicenseBufferSize();

        // Is legacy license detected for ARCTerm? Dump path in parameter...
        bool            IsLegacyARCTermLicenseDetected(char *pszLegacyLicensePath);

        // Does this MAC address exist in the system on any network adapter?
        bool            IsMACPresentInSystem(unsigned char *pMACAddress);

        // Add data to license buffer. NULL to clear...
        void           *PushLicenseData(void *pData, unsigned int unSize);

        // Convert winblows system time to normal C time_t format...
        time_t          SystemTimeToUnixTime(SYSTEMTIME *pSystemTime);

        // Upgrade old legacy ARCTerm license to new one...
        bool            UpgradeLegacyARCTermLicense();
        
        // Variables...
        unsigned char  *pLicenseBuffer;
        int           dwLicenseBufferSize;
       //the application install path ;
		CString  m_path ;
};

#endif
